import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

#Importing the dataset and displaying the head of the dataset
df=pd.read_csv("Mall_Customers.csv")
df.head()

#Dropping Customer ID Attribute
df.drop(['CustomerID'],axis=1)

#Data Visualization
sns.scatterplot(x="Annual Income (k$)",y="Spending Score (1-100)",hue="Gender", data=df)
sns.scatterplot(x="Age",y="Spending Score (1-100)",hue="Gender", data=df)
sns.scatterplot(x="Age",y="Annual Income (k$)",hue="Gender", data=df)

from sklearn.model_selection import cross_val_score, train_test_split, GridSearchCV
from sklearn.cluster import KMeans

X_k = df['Annual Income (k$)'].values
y_k = df['Spending Score (1-100)'].values
X_k1 = df[['Annual Income (k$)' , 'Spending Score (1-100)']].iloc[: , :].values


model1=KMeans()
model1.fit(X_k1)
from yellowbrick.cluster import KElbowVisualizer
elbow=KElbowVisualizer(model1, k=(2,20))
elbow.fit(X_k1)
elbow.poof()



model = KMeans(n_clusters=17)
model.fit(X_k1)

y_kmeans = model.fit_predict(X_k1)

labels=set(model.labels_)
print(labels)
for c in labels:
    plt.scatter(X_k1[model.labels_ == c,0],
               X_k1[model.labels_ == c,1],
               label='Cluster {}'.format(c))


plt.xlabel('Annual Income')
plt.ylabel('Spending Score')

plt.show()


centroids = model.cluster_centers_
print(centroids)



